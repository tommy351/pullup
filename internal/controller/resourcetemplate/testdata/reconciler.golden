# Generated by goldga. DO NOT EDIT.
[snapshots]
"Reconciler when jsonPatch is given should match the golden file" = '''
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: null
    name: foo-rt
    namespace: test
    ownerReferences:
    - apiVersion: pullup.dev/v1beta1
      blockOwnerDeletion: true
      controller: true
      kind: ResourceTemplate
      name: foo-rt
      uid: ""
    selfLink: /api/v1/namespaces/test/pods/foo-rt
  spec:
    containers:
    - image: nginx:alpine
      imagePullPolicy: Always
      name: nginx
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
  status:
    phase: Pending
    qosClass: BestEffort
- apiVersion: pullup.dev/v1beta1
  kind: ResourceTemplate
  metadata:
    creationTimestamp: null
    name: foo-rt
    namespace: test
    selfLink: /apis/pullup.dev/v1beta1/namespaces/test/resourcetemplates/foo-rt
  spec:
    data:
      event:
        nginxTag: alpine
    patches:
    - apiVersion: v1
      jsonPatch:
      - op: replace
        path: /spec/containers/0/image
        value: nginx:{{ .event.nginxTag }}
      - op: remove
        path: /metadata/annotations/foo
      kind: Pod
      sourceName: foo
  status:
    active:
    - apiVersion: v1
      kind: Pod
      name: foo-rt
    lastUpdateTime: null
'''
"Reconciler when merge is given should match the golden file" = '''
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: null
    name: foo-rt
    namespace: test
    ownerReferences:
    - apiVersion: pullup.dev/v1beta1
      blockOwnerDeletion: true
      controller: true
      kind: ResourceTemplate
      name: foo-rt
      uid: ""
    selfLink: /api/v1/namespaces/test/pods/foo-rt
  spec:
    containers:
    - image: node
      imagePullPolicy: Always
      name: node
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
    - image: nginx:alpine
      imagePullPolicy: Always
      name: nginx
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
  status:
    phase: Pending
    qosClass: BestEffort
- apiVersion: pullup.dev/v1beta1
  kind: ResourceTemplate
  metadata:
    creationTimestamp: null
    name: foo-rt
    namespace: test
    selfLink: /apis/pullup.dev/v1beta1/namespaces/test/resourcetemplates/foo-rt
  spec:
    data:
      event:
        nginxTag: alpine
    patches:
    - apiVersion: v1
      kind: Pod
      merge:
        spec:
          containers:
          - image: node
            name: node
          - image: nginx:{{ .event.nginxTag }}
            name: nginx
      sourceName: foo
  status:
    active:
    - apiVersion: v1
      kind: Pod
      name: foo-rt
    lastUpdateTime: null
'''
"Reconciler when merge with apiVersion, kind and name set should match the golden file" = '''
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: null
    name: foo-rt
    namespace: test
    ownerReferences:
    - apiVersion: pullup.dev/v1beta1
      blockOwnerDeletion: true
      controller: true
      kind: ResourceTemplate
      name: foo-rt
      uid: ""
    selfLink: /api/v1/namespaces/test/pods/foo-rt
  spec:
    containers:
    - image: nginx:alpine
      imagePullPolicy: Always
      name: nginx
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
  status:
    phase: Pending
    qosClass: BestEffort
- apiVersion: pullup.dev/v1beta1
  kind: ResourceTemplate
  metadata:
    creationTimestamp: null
    name: foo-rt
    namespace: test
    selfLink: /apis/pullup.dev/v1beta1/namespaces/test/resourcetemplates/foo-rt
  spec:
    data: {}
    patches:
    - apiVersion: v1
      kind: Pod
      merge:
        apiVersion: v12
        kind: Poo
        metadata:
          name: xyz
          namespace: abc
        spec:
          containers:
          - image: nginx:alpine
            name: nginx
      sourceName: foo
  status:
    active:
    - apiVersion: v1
      kind: Pod
      name: foo-rt
    lastUpdateTime: null
'''
"Reconciler when merge with apiVersion, kind and name should match the golden file" = '''
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: null
    name: foo-rt
    namespace: test
    ownerReferences:
    - apiVersion: pullup.dev/v1beta1
      blockOwnerDeletion: true
      controller: true
      kind: ResourceTemplate
      name: foo-rt
      uid: ""
    selfLink: /api/v1/namespaces/test/pods/foo-rt
  spec:
    containers:
    - image: nginx:alpine
      imagePullPolicy: Always
      name: nginx
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
  status:
    phase: Pending
    qosClass: BestEffort
'''
"Reconciler when merge without data should match the golden file" = '''
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: null
    name: foo-rt
    namespace: test
    ownerReferences:
    - apiVersion: pullup.dev/v1beta1
      blockOwnerDeletion: true
      controller: true
      kind: ResourceTemplate
      name: foo-rt
      uid: ""
    selfLink: /api/v1/namespaces/test/pods/foo-rt
  spec:
    containers:
    - image: nginx:alpine
      imagePullPolicy: Always
      name: nginx
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
  status:
    phase: Pending
    qosClass: BestEffort
- apiVersion: pullup.dev/v1beta1
  kind: ResourceTemplate
  metadata:
    creationTimestamp: null
    name: foo-rt
    namespace: test
    selfLink: /apis/pullup.dev/v1beta1/namespaces/test/resourcetemplates/foo-rt
  spec:
    data: null
    patches:
    - apiVersion: v1
      kind: Pod
      merge:
        spec:
          containers:
          - image: nginx:alpine
            name: nginx
      sourceName: foo
  status:
    active:
    - apiVersion: v1
      kind: Pod
      name: foo-rt
    lastUpdateTime: null
'''
"Reconciler when metadata is a template string should match the golden file" = '''
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: null
    name: bar
    namespace: test
    ownerReferences:
    - apiVersion: pullup.dev/v1beta1
      blockOwnerDeletion: true
      controller: true
      kind: ResourceTemplate
      name: foo-rt
      uid: ""
    selfLink: /api/v1/namespaces/test/pods/bar
  spec:
    containers:
    - image: nginx
      imagePullPolicy: Always
      name: nginx
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
  status:
    phase: Pending
    qosClass: BestEffort
- apiVersion: pullup.dev/v1beta1
  kind: ResourceTemplate
  metadata:
    creationTimestamp: null
    name: foo-rt
    namespace: test
    selfLink: /apis/pullup.dev/v1beta1/namespaces/test/resourcetemplates/foo-rt
  spec:
    data:
      event:
        apiVersion: v1
        kind: Pod
        sourceName: foo
        targetName: bar
    patches:
    - apiVersion: '{{ .event.apiVersion }}'
      kind: '{{ .event.kind }}'
      sourceName: '{{ .event.sourceName }}'
      targetName: '{{ .event.targetName }}'
  status:
    active:
    - apiVersion: v1
      kind: Pod
      name: bar
    lastUpdateTime: null
'''
"Reconciler when multi patches should match the golden file" = '''
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: null
    name: foo-rt
    namespace: test
    ownerReferences:
    - apiVersion: pullup.dev/v1beta1
      blockOwnerDeletion: true
      controller: true
      kind: ResourceTemplate
      name: foo-rt
      uid: ""
    selfLink: /api/v1/namespaces/test/pods/foo-rt
  spec:
    containers:
    - image: nginx:bar
      imagePullPolicy: Always
      name: nginx
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
  status:
    phase: Pending
    qosClass: BestEffort
- apiVersion: v1
  data:
    foo: bar
  kind: ConfigMap
  metadata:
    creationTimestamp: null
    name: foo-rt
    namespace: test
    ownerReferences:
    - apiVersion: pullup.dev/v1beta1
      blockOwnerDeletion: true
      controller: true
      kind: ResourceTemplate
      name: foo-rt
      uid: ""
    selfLink: /api/v1/namespaces/test/configmaps/foo-rt
- apiVersion: pullup.dev/v1beta1
  kind: ResourceTemplate
  metadata:
    creationTimestamp: null
    name: foo-rt
    namespace: test
    selfLink: /apis/pullup.dev/v1beta1/namespaces/test/resourcetemplates/foo-rt
  spec:
    data:
      event:
        foo: bar
    patches:
    - apiVersion: v1
      kind: Pod
      merge:
        spec:
          containers:
          - image: nginx:{{ .event.foo }}
            name: nginx
      sourceName: foo-pod
    - apiVersion: v1
      kind: ConfigMap
      merge:
        data:
          foo: '{{ .event.foo }}'
      sourceName: foo-conf
  status:
    active:
    - apiVersion: v1
      kind: Pod
      name: foo-rt
    - apiVersion: v1
      kind: ConfigMap
      name: foo-rt
    lastUpdateTime: null
'''
"Reconciler when original and current resource exists should match the golden file" = '''
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: null
    name: foo-rt
    namespace: test
    ownerReferences:
    - apiVersion: pullup.dev/v1beta1
      blockOwnerDeletion: true
      controller: true
      kind: ResourceTemplate
      name: foo-rt
      uid: ""
    selfLink: /api/v1/namespaces/test/pods/foo-rt
  spec:
    containers:
    - image: nginx:alpine
      imagePullPolicy: IfNotPresent
      name: nginx
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
  status:
    phase: Pending
    qosClass: BestEffort
- apiVersion: pullup.dev/v1beta1
  kind: ResourceTemplate
  metadata:
    creationTimestamp: null
    name: foo-rt
    namespace: test
    selfLink: /apis/pullup.dev/v1beta1/namespaces/test/resourcetemplates/foo-rt
  spec:
    data: null
    patches:
    - apiVersion: v1
      kind: Pod
      merge:
        spec:
          containers:
          - image: nginx:alpine
            name: nginx
      sourceName: foo
  status:
    active:
    - apiVersion: v1
      kind: Pod
      name: foo-rt
    lastUpdateTime: null
'''
"Reconciler when original resource exists should match the golden file" = '''
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: null
    name: foo-rt
    namespace: test
    ownerReferences:
    - apiVersion: pullup.dev/v1beta1
      blockOwnerDeletion: true
      controller: true
      kind: ResourceTemplate
      name: foo-rt
      uid: ""
    selfLink: /api/v1/namespaces/test/pods/foo-rt
  spec:
    containers:
    - image: nginx
      imagePullPolicy: Always
      name: nginx
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
  status:
    phase: Pending
    qosClass: BestEffort
- apiVersion: pullup.dev/v1beta1
  kind: ResourceTemplate
  metadata:
    creationTimestamp: null
    name: foo-rt
    namespace: test
    selfLink: /apis/pullup.dev/v1beta1/namespaces/test/resourcetemplates/foo-rt
  spec:
    data: null
    patches:
    - apiVersion: v1
      kind: Pod
      sourceName: foo
  status:
    active:
    - apiVersion: v1
      kind: Pod
      name: foo-rt
    lastUpdateTime: null
'''
"Reconciler when resource is not controlled should match the golden file" = '''
- apiVersion: pullup.dev/v1beta1
  kind: ResourceTemplate
  metadata:
    creationTimestamp: null
    name: foo-rt
    namespace: test
    selfLink: /apis/pullup.dev/v1beta1/namespaces/test/resourcetemplates/foo-rt
  spec:
    data: null
    patches:
    - apiVersion: v1
      kind: Pod
  status:
    active:
    - apiVersion: v1
      kind: Pod
      name: foo-rt
    lastUpdateTime: null
'''
"Reconciler when resource is unchanged should match the golden file" = '''
- apiVersion: pullup.dev/v1beta1
  kind: ResourceTemplate
  metadata:
    creationTimestamp: null
    name: foo-rt
    namespace: test
    selfLink: /apis/pullup.dev/v1beta1/namespaces/test/resourcetemplates/foo-rt
  spec:
    data: null
    patches:
    - apiVersion: v1
      kind: Pod
      merge:
        spec:
          containers:
          - image: nginx:alpine
            name: nginx
  status:
    active:
    - apiVersion: v1
      kind: Pod
      name: foo-rt
    lastUpdateTime: null
'''
"Reconciler when targetName is given should match the golden file" = '''
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: null
    name: foo-new
    namespace: test
    ownerReferences:
    - apiVersion: pullup.dev/v1beta1
      blockOwnerDeletion: true
      controller: true
      kind: ResourceTemplate
      name: foo-rt
      uid: ""
    selfLink: /api/v1/namespaces/test/pods/foo-new
  spec:
    containers:
    - image: nginx:alpine
      imagePullPolicy: IfNotPresent
      name: nginx
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
  status:
    phase: Pending
    qosClass: BestEffort
- apiVersion: pullup.dev/v1beta1
  kind: ResourceTemplate
  metadata:
    creationTimestamp: null
    name: foo-rt
    namespace: test
    selfLink: /apis/pullup.dev/v1beta1/namespaces/test/resourcetemplates/foo-rt
  spec:
    data: null
    patches:
    - apiVersion: v1
      kind: Pod
      merge:
        spec:
          containers:
          - image: nginx:alpine
            name: nginx
      targetName: foo-new
  status:
    active:
    - apiVersion: v1
      kind: Pod
      name: foo-new
    lastUpdateTime: null
'''
"Reconciler when updating status should match the golden file" = '''
- apiVersion: pullup.dev/v1beta1
  kind: ResourceTemplate
  metadata:
    creationTimestamp: null
    name: foo-rt
    namespace: test
    selfLink: /apis/pullup.dev/v1beta1/namespaces/test/resourcetemplates/foo-rt
  spec:
    data: null
    patches:
    - apiVersion: v1
      kind: Pod
      merge:
        spec:
          containers:
          - image: nginx:alpine
            name: nginx
  status:
    lastUpdateTime: null
'''
"Reconciler when using CRD and current resource exists should match the golden file" = '''
- apiVersion: test.pullup.dev/v1
  kind: Job
  metadata:
    name: foo-rt
    namespace: test
    ownerReferences:
    - apiVersion: pullup.dev/v1beta1
      blockOwnerDeletion: true
      controller: true
      kind: ResourceTemplate
      name: foo-rt
      uid: ""
    selfLink: /apis/test.pullup.dev/v1/namespaces/test/jobs/foo-rt
  spec:
    name: xyz
- apiVersion: pullup.dev/v1beta1
  kind: ResourceTemplate
  metadata:
    creationTimestamp: null
    name: foo-rt
    namespace: test
    selfLink: /apis/pullup.dev/v1beta1/namespaces/test/resourcetemplates/foo-rt
  spec:
    data: null
    patches:
    - apiVersion: test.pullup.dev/v1
      kind: Job
      merge:
        spec:
          name: xyz
      sourceName: foo
  status:
    active:
    - apiVersion: test.pullup.dev/v1
      kind: Job
      name: foo-rt
    lastUpdateTime: null
'''
"Reconciler when using CRD should match the golden file" = '''
- apiVersion: test.pullup.dev/v1
  kind: Job
  metadata:
    name: foo-rt
    namespace: test
    ownerReferences:
    - apiVersion: pullup.dev/v1beta1
      blockOwnerDeletion: true
      controller: true
      kind: ResourceTemplate
      name: foo-rt
      uid: ""
    selfLink: /apis/test.pullup.dev/v1/namespaces/test/jobs/foo-rt
  spec:
    name: xyz
- apiVersion: pullup.dev/v1beta1
  kind: ResourceTemplate
  metadata:
    creationTimestamp: null
    name: foo-rt
    namespace: test
    selfLink: /apis/pullup.dev/v1beta1/namespaces/test/resourcetemplates/foo-rt
  spec:
    data: null
    patches:
    - apiVersion: test.pullup.dev/v1
      kind: Job
      merge:
        spec:
          name: xyz
      sourceName: foo
  status:
    active:
    - apiVersion: test.pullup.dev/v1
      kind: Job
      name: foo-rt
    lastUpdateTime: null
'''
"Reconciler when using resource in template should match the golden file" = '''
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: null
    name: foo-rt
    namespace: test
    ownerReferences:
    - apiVersion: pullup.dev/v1beta1
      blockOwnerDeletion: true
      controller: true
      kind: ResourceTemplate
      name: foo-rt
      uid: ""
    selfLink: /api/v1/namespaces/test/pods/foo-rt
  spec:
    containers:
    - env:
      - name: RESOURCE_NAME
        value: foo-rt
      image: nginx:alpine
      imagePullPolicy: IfNotPresent
      name: nginx
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
  status:
    phase: Pending
    qosClass: BestEffort
- apiVersion: pullup.dev/v1beta1
  kind: ResourceTemplate
  metadata:
    creationTimestamp: null
    name: foo-rt
    namespace: test
    selfLink: /apis/pullup.dev/v1beta1/namespaces/test/resourcetemplates/foo-rt
  spec:
    data: null
    patches:
    - apiVersion: v1
      kind: Pod
      merge:
        spec:
          containers:
          - env:
            - name: RESOURCE_NAME
              value: '{{ .resource.metadata.name }}'
            image: nginx:alpine
            name: nginx
  status:
    active:
    - apiVersion: v1
      kind: Pod
      name: foo-rt
    lastUpdateTime: null
'''
"Reconciler when webhook not found should match the golden file" = '''
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: null
    name: foo-rt
    namespace: test
    ownerReferences:
    - apiVersion: pullup.dev/v1beta1
      blockOwnerDeletion: true
      controller: true
      kind: ResourceTemplate
      name: foo-rt
      uid: ""
    selfLink: /api/v1/namespaces/test/pods/foo-rt
  spec:
    containers:
    - image: nginx:alpine
      imagePullPolicy: IfNotPresent
      name: nginx
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
  status:
    phase: Pending
    qosClass: BestEffort
- apiVersion: pullup.dev/v1beta1
  kind: ResourceTemplate
  metadata:
    creationTimestamp: null
    name: foo-rt
    namespace: test
    selfLink: /apis/pullup.dev/v1beta1/namespaces/test/resourcetemplates/foo-rt
  spec:
    data: null
    patches:
    - apiVersion: v1
      kind: Pod
      merge:
        spec:
          containers:
          - image: nginx:alpine
            name: nginx
    webhookRef:
      apiVersion: pullup.dev/v1beta1
      kind: HTTPWebhook
      name: http-hook
  status:
    active:
    - apiVersion: v1
      kind: Pod
      name: foo-rt
    lastUpdateTime: null
'''
"Reconciler when webhookRef is given should match the golden file" = '''
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: null
    name: foo-rt
    namespace: test
    ownerReferences:
    - apiVersion: pullup.dev/v1beta1
      blockOwnerDeletion: true
      controller: true
      kind: ResourceTemplate
      name: foo-rt
      uid: ""
    selfLink: /api/v1/namespaces/test/pods/foo-rt
  spec:
    containers:
    - env:
      - name: WEBHOOK_NAME
        value: http-hook
      image: nginx:alpine
      imagePullPolicy: IfNotPresent
      name: nginx
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
  status:
    phase: Pending
    qosClass: BestEffort
- apiVersion: pullup.dev/v1beta1
  kind: ResourceTemplate
  metadata:
    creationTimestamp: null
    name: foo-rt
    namespace: test
    selfLink: /apis/pullup.dev/v1beta1/namespaces/test/resourcetemplates/foo-rt
  spec:
    data: null
    patches:
    - apiVersion: v1
      kind: Pod
      merge:
        spec:
          containers:
          - env:
            - name: WEBHOOK_NAME
              value: '{{ .webhook.metadata.name }}'
            image: nginx:alpine
            name: nginx
    webhookRef:
      apiVersion: pullup.dev/v1beta1
      kind: HTTPWebhook
      name: http-hook
  status:
    active:
    - apiVersion: v1
      kind: Pod
      name: foo-rt
    lastUpdateTime: null
'''
"Reconciler when without original and current resource should match the golden file" = '''
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: null
    name: foo-rt
    namespace: test
    ownerReferences:
    - apiVersion: pullup.dev/v1beta1
      blockOwnerDeletion: true
      controller: true
      kind: ResourceTemplate
      name: foo-rt
      uid: ""
    selfLink: /api/v1/namespaces/test/pods/foo-rt
  spec:
    containers:
    - image: nginx:alpine
      imagePullPolicy: IfNotPresent
      name: nginx
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
  status:
    phase: Pending
    qosClass: BestEffort
- apiVersion: pullup.dev/v1beta1
  kind: ResourceTemplate
  metadata:
    creationTimestamp: null
    name: foo-rt
    namespace: test
    selfLink: /apis/pullup.dev/v1beta1/namespaces/test/resourcetemplates/foo-rt
  spec:
    data: null
    patches:
    - apiVersion: v1
      kind: Pod
      merge:
        spec:
          containers:
          - image: nginx:alpine
            name: nginx
  status:
    active:
    - apiVersion: v1
      kind: Pod
      name: foo-rt
    lastUpdateTime: null
'''
