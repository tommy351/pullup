# Generated by goldga. DO NOT EDIT.
[snapshots]
"Reconciler when applied resource exists should match the golden file" = '''
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: null
    name: test-46
    namespace: test
    ownerReferences:
    - apiVersion: pullup.dev/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: ResourceSet
      name: test-46
      uid: ""
    selfLink: /api/v1/namespaces/test/pods/test-46
  spec:
    containers:
    - image: nginx:latest
      imagePullPolicy: Always
      name: nginx
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
  status:
    phase: Pending
    qosClass: BestEffort
'''
"Reconciler when neither original nor applied resource exists should match the golden file" = '''
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: null
    name: test-46
    namespace: test
    ownerReferences:
    - apiVersion: pullup.dev/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: ResourceSet
      name: test-46
      uid: ""
    selfLink: /api/v1/namespaces/test/pods/test-46
  spec:
    containers:
    - image: gcr.io/test/foo
      imagePullPolicy: Always
      name: foo
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
  status:
    phase: Pending
    qosClass: BestEffort
'''
"Reconciler when original resource exists should match the golden file" = '''
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: null
    name: test-46
    namespace: test
    ownerReferences:
    - apiVersion: pullup.dev/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: ResourceSet
      name: test-46
      uid: ""
    selfLink: /api/v1/namespaces/test/pods/test-46
  spec:
    containers:
    - image: nginx
      imagePullPolicy: Always
      name: nginx
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
  status:
    phase: Pending
    qosClass: BestEffort
'''
"Reconciler when resource contain common arrays should match the golden file" = '''
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: test-46
    namespace: test
    ownerReferences:
    - apiVersion: pullup.dev/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: ResourceSet
      name: test-46
      uid: ""
    selfLink: /apis/apps/v1/namespaces/test/deployments/test-46
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: test
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: test
      spec:
        containers:
        - args:
          - a3
          - b3
          - c
          image: nginx
          imagePullPolicy: Always
          name: nginx
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status: {}
'''
"Reconciler when resource contain named arrays should match the golden file" = '''
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: test-46
    namespace: test
    ownerReferences:
    - apiVersion: pullup.dev/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: ResourceSet
      name: test-46
      uid: ""
    selfLink: /apis/apps/v1/namespaces/test/deployments/test-46
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: test
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: test
      spec:
        containers:
        - env:
          - name: A
            value: a2
          - name: B
            value: b2
          - name: C
            value: c1
          image: gcr.io/test/foo:v2
          imagePullPolicy: IfNotPresent
          name: foo
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status: {}
'''
"Reconciler when resource contain template should match the golden file" = '''
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: null
    name: test-46
    namespace: test
    ownerReferences:
    - apiVersion: pullup.dev/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: ResourceSet
      name: test-46
      uid: ""
    selfLink: /api/v1/namespaces/test/pods/test-46
  spec:
    containers:
    - env:
      - name: PR_NUMBER
        value: "46"
      image: gcr.io/test/foo:aad2b388e813f3a3c90672332bdd2f9c5bac568c
      imagePullPolicy: IfNotPresent
      name: test-46
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
  status:
    phase: Pending
    qosClass: BestEffort
'''
"Reconciler when resource set contains multiple resources should match the golden file" = '''
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: null
    name: test-46
    namespace: test
    ownerReferences:
    - apiVersion: pullup.dev/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: ResourceSet
      name: test-46
      uid: ""
    selfLink: /api/v1/namespaces/test/pods/test-46
  spec:
    containers:
    - image: nginx
      imagePullPolicy: Always
      name: nginx
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
  status:
    phase: Pending
    qosClass: BestEffort
- apiVersion: v1
  data:
    foo: bar
  kind: ConfigMap
  metadata:
    creationTimestamp: null
    name: test-46
    namespace: test
    ownerReferences:
    - apiVersion: pullup.dev/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: ResourceSet
      name: test-46
      uid: ""
    selfLink: /api/v1/namespaces/test/configmaps/test-46
'''
